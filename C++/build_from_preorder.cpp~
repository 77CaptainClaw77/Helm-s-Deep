#include <iostream>
#include <vector>

struct TreeNode {
  int val;
  TreeNode *left;
  TreeNode *right;
  TreeNode(int x) : val(x), left(NULL), right(NULL) {}
};
class Solution {
public:
    TreeNode* buildTree(vector<int>& preorder,int l,int h){
        TreeNode* newn=new TreeNode(ele);
        int ele=preorder[l],pos=l+1;
        while(pos<=h){
            if(preoder[pos]>ele)
                break;
            pos++;
        }
        if(pos>l)
            newn->left=buildTree(preorder,l,pos-1);
        if(pos<=h)
            newn->right=buildTree(preorder,pos,h);
        return newn;
    }
    TreeNode* bstFromPreorder(vector<int>& preorder) {
        return buildTree(preorder,0,preorder.size()-1);
    }
};
int main(int argc,char* argv[]){
  return 0;
}
